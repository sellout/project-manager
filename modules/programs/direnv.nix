{
  config,
  lib,
  pkgs,
  ...
}:
with lib; let
  cfg = config.programs.direnv;

  projectDirectory = config.project.projectDirectory;

  fileContents =
    (import ../lib/file-type.nix {
      inherit projectDirectory lib pkgs;
      commit-by-default = config.project.commit-by-default;
    })
    .fileContents;
in {
  meta.maintainers = [maintainers.sellout];

  options.programs.direnv = {
    enable = mkEnableOption (lib.mdDoc "direnv, the environment switcher");

    package = mkOption {
      type = types.package;
      default = pkgs.direnv;
      defaultText = lib.literalMD "pkgs.direnv";
      description = lib.mdDoc ''
        Direnv package to install.
      '';
    };

    auto-allow = mkOption {
      type = types.bool;
      default = false;
      description = lib.mdDoc ''
        Whether running project-manager will implicitly run `direnv allow` for
        the user.
      '';
    };

    commit-envrc = mkOption {
      type = types.bool;
      default = true;
      description = lib.mdDoc ''
        Whether .envrc should be committed to the repo or only available
        locally. If this is false, then users will have to run
        `project-manager switch` before direnv will work.
      '';
    };

    envrc = mkOption {
      type = lib.types.lines;
      description = lib.mdDoc ''
        The contents of the .envrc file.
      '';
    };
  };

  config = mkIf cfg.enable (let
    layoutDir = "${config.xdg.cacheDir}/direnv";
  in {
    project.packages = [cfg.package];

    programs.git.ignores = ["/${layoutDir}/"];
    programs.mercurial.ignoresRooted = ["${layoutDir}/**"];

    project = {
      activation.direnv = mkIf cfg.auto-allow (pm.dag.entryAfter ["onFilesChange"] ''
        ${pkgs.direnv}/bin/direnv allow
      '');

      file.".envrc" = {
        text =
          ''
            # This file was generated by Project Manager.
            direnv_layout_dir="$PWD/${layoutDir}"
          ''
          + cfg.envrc;
        minimum-persistence = "worktree";
        ## See direnv/direnv#1160.
        broken-symlink = true;
        commit-by-default = cfg.commit-envrc;
      };
    };
  });
}
